*devcon.txt* generate basic dev container files with LSP support
*devcon* *DevCon*

                     ____            ______ ~
                    / __ \___ _   __/ ____/___  ____ ~
                   / / / / _ \ | / / /   / __ \/ __ \ ~
                  / /_/ /  __/ |/ / /___/ /_/ / / / / ~
                 /_____/\___/|___/\____/\____/_/ /_/ ~

          Generate a basic set of files to add dev containers
                 support to a project edited in Neovim.

========================================================================
CONTENTS

    1. Rationale ..................................... |DevConRationale|
    2. Usage ......................................... |DevConUsage|
    3. Settings ...................................... |DevConSettings|
    3. Commands ...................................... |DevConCommands|
    4. Caveats ....................................... |DevConCaveats|

========================================================================
Section 1: Rationale                                   *DevConRationale*

There are multiple Neovim plugins to use devcontainers. Some of them
even embed Neovim inside the container and add loads of hassle to your
workflows. With DevCon, you can keep using the simple layer provided by
`nvim-lspconfig` with all your local customizations and avoid polluting
your system with multiple LSP servers and libraries.

The key is using you local Neovim with a container runtime (Docker or
Podman) to keep all LSP stuff inside a disposable container. Full
integration is achieved by using volume mounts with the project folder
and local library paths in exactly the same paths inside the container.

With DevCon, an some tweaks to the config if needed, the creation of
containerfiles, building of images and injecting the settings are
streamlined using a few commands and handy provided templates.

========================================================================
Section 2: Usage                                           *DevConUsage*

========================================================================
Section 3: Settings                                     *DevConSettings*

opts = {

  (optional, for manual lazy loading)
  lazy = false,

  (default to podman if available, else docker)
  cli = 'docker',

  (required) (k is lspconfig server name and v has config)
  lsp_servers = {
    lua_ls = {
      ... (see below)
    }
  }

  (required here or in each LSP server block)
  root_dir = '/some/path/to/project',

  (optional, guessed from cli)
  arch = 'amd64',

  (optional, to add extra values to LSP server configs)
  config_lsp = function (x) return x end,

}


lua_ls = {

  (required here or in the root configs)
  root_dir = '/some/path/to/project',

  (optional)
  config_lsp = function...,

  (optional server/image/arch default to -server-/alpine/-arch-)
  template = 'lua_ls/alpine/amd64'

  (default to nil, will use Dockerfile template contents)
  base_image = 'alpine',

  (default to nil, will use Dockerfile template contents)
  base_tag = 'latest',

  (default to project dir name)
  devcon_image = 'project',

  (default to devcon)
  devcon_tag = 'devcon',

  (default to Dockerfile.server.devcon)
  containerfile = 'Dockerfile.lua_ls.devcon

  (default to empty table)
  extra_dirs = { '/other/path/to/lib' },

  (default to empty table)
  config {
    on_attach = ?
    capabilities = ?
  }

}


========================================================================
Section 4: Commands                                     *DevConCommands*

DevConInit

========================================================================
Section 5: Caveats                                       *DevConCaveats*


------------------------------------------------------------------------


 vim:ft=help:tw=72:cc=73:ts=4:et:norl:
